{"ast":null,"code":"var _jsxFileName = \"/Users/surya/Desktop/Stay-Updated/Login/src/Components/flipcard.js\";\nimport React, { Component } from \"react\";\nexport default class flipcard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        isFlipped: !this.state.isFlipped\n      });\n    };\n\n    this.handleFooterDotClick = (newCardIndex, event) => {\n      this.setState({\n        isFlipped: newCardIndex === 0\n      });\n    };\n\n    this.handleHoverOn = event => {\n      this.setState({\n        isFlipped: true\n      });\n      this.props.onMouseEnter(event);\n    };\n\n    this.handleTouchStart = event => {\n      this.setState({\n        isFlipped: true,\n        isTouchDevice: true\n      });\n      this.props.onTouchStart(event);\n    };\n\n    this.handleTouchEnd = event => {\n      this.setState({\n        isFlipped: false\n      });\n      this.props.onTouchEnd(event);\n    };\n\n    this.handleHoverOff = event => {\n      this.setState({\n        isFlipped: false\n      });\n      this.props.onMouseLeave(event);\n    };\n\n    this.state = {\n      isFlipped: false,\n      isTouchDevice: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return { ...state,\n      isFlipped: typeof props.isFlipped === \"boolean\" ? props.isFlipped : state.isFlipped\n    };\n  }\n\n  render() {\n    const {\n      children,\n      style,\n      flipDirection,\n      flipOnHover,\n      flipOnClick\n    } = this.props;\n    const {\n      isFlipped,\n      activeCardIndex,\n      isTouchDevice\n    } = this.state;\n    const methods = !!flipOnHover ? {\n      onMouseEnter: this.handleHoverOn,\n      onMouseLeave: this.handleHoverOff,\n      onTouchStart: this.handleTouchStart,\n      onTouchEnd: this.handleTouchEnd\n    } : flipOnClick ? {\n      onClick: this.toggle\n    } : {};\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      className: \"flippy-container\",\n      style: { ...style\n      }\n    }, methods, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `flippy-cardContainer-wrapper ${flipDirection}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `flippy-cardContainer ${isFlipped ? \"isActive\" : \"\"} ${isTouchDevice ? \"istouchdevice\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, children), this.props.showNavigation && /*#__PURE__*/React.createElement(FlippyFooter, {\n      onDotClick: this.handleFooterDotClick,\n      activeCardIndex: activeCardIndex,\n      cards: this.props.children,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/surya/Desktop/Stay-Updated/Login/src/Components/flipcard.js"],"names":["React","Component","flipcard","constructor","props","toggle","setState","isFlipped","state","handleFooterDotClick","newCardIndex","event","handleHoverOn","onMouseEnter","handleTouchStart","isTouchDevice","onTouchStart","handleTouchEnd","onTouchEnd","handleHoverOff","onMouseLeave","getDerivedStateFromProps","render","children","style","flipDirection","flipOnHover","flipOnClick","activeCardIndex","methods","onClick","showNavigation"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class flipcard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFlipped: false,\n      isTouchDevice: false,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      ...state,\n      isFlipped:\n        typeof props.isFlipped === \"boolean\"\n          ? props.isFlipped\n          : state.isFlipped,\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      isFlipped: !this.state.isFlipped,\n    });\n  };\n\n  handleFooterDotClick = (newCardIndex, event) => {\n    this.setState({\n      isFlipped: newCardIndex === 0,\n    });\n  };\n\n  handleHoverOn = (event) => {\n    this.setState({\n      isFlipped: true,\n    });\n    this.props.onMouseEnter(event);\n  };\n\n  handleTouchStart = (event) => {\n    this.setState({\n      isFlipped: true,\n      isTouchDevice: true,\n    });\n    this.props.onTouchStart(event);\n  };\n\n  handleTouchEnd = (event) => {\n    this.setState({\n      isFlipped: false,\n    });\n    this.props.onTouchEnd(event);\n  };\n\n  handleHoverOff = (event) => {\n    this.setState({\n      isFlipped: false,\n    });\n    this.props.onMouseLeave(event);\n  };\n\n  render() {\n    const {\n      children,\n      style,\n      flipDirection,\n      flipOnHover,\n      flipOnClick,\n    } = this.props;\n    const { isFlipped, activeCardIndex, isTouchDevice } = this.state;\n    const methods = !!flipOnHover\n      ? {\n          onMouseEnter: this.handleHoverOn,\n          onMouseLeave: this.handleHoverOff,\n          onTouchStart: this.handleTouchStart,\n          onTouchEnd: this.handleTouchEnd,\n        }\n      : flipOnClick\n      ? {\n          onClick: this.toggle,\n        }\n      : {};\n    return (\n      <div\n        className='flippy-container'\n        style={{\n          ...style,\n        }}\n        {...methods}>\n        <div className={`flippy-cardContainer-wrapper ${flipDirection}`}>\n          <div\n            className={`flippy-cardContainer ${isFlipped ? \"isActive\" : \"\"} ${\n              isTouchDevice ? \"istouchdevice\" : \"\"\n            }`}>\n            {children}\n          </div>\n          {this.props.showNavigation && (\n            <FlippyFooter\n              onDotClick={this.handleFooterDotClick}\n              activeCardIndex={activeCardIndex}\n              cards={this.props.children}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}