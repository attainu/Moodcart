{"ast":null,"code":"var _jsxFileName = \"/Users/surya/Desktop/Stay-Updated/Login/src/Components/Navbar.js\";\nimport React, { useState } from \"react\";\nimport \"./NavBar.css\";\nimport { GoogleLogout } from \"react-google-login\";\nimport { logOutUser } from \"../Redux/actions/userAction\";\nimport { connect } from \"react-redux\";\nimport bookmark from \"./bookmark.svg\";\nimport { Navbar, Nav, NavItem, NavbarBrand } from \"reactstrap\";\nimport { NavLink, Link, Redirect } from \"react-router-dom\";\nimport Keys from \"../config\";\nimport Category from \"./category\";\n\nconst SuNavbar = ({\n  user,\n  logOutUser\n}) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  let userData;\n\n  if (user != null) {\n    userData = JSON.parse(window.localStorage.getItem(\"user\"));\n  } else {\n    userData = null;\n  }\n\n  console.log(userData);\n\n  const handleLogoutFailure = err => {\n    console.error(err);\n  };\n\n  const handleLogoutSuccess = () => {\n    alert(\"Logged out successfully\");\n    logOutUser();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navBar\",\n    expand: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navBarWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    id: \"link\",\n    className: \"webName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"webNameH1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"StayUpdated\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"positions\",\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, !user ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Category, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/profile/\",\n    \"data-tip\": \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: userData.imageUrl,\n    className: \"App-logo-profile App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"navItem3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(GoogleLogout, {\n    clientId: Keys.Client_id,\n    buttonText: \"Logout\",\n    onLogoutSuccess: handleLogoutSuccess,\n    onFailure: handleLogoutFailure,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nconst mapStateToProps = storeState => {\n  return {\n    user: storeState.userState.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logOutUser\n})(SuNavbar);","map":{"version":3,"sources":["/Users/surya/Desktop/Stay-Updated/Login/src/Components/Navbar.js"],"names":["React","useState","GoogleLogout","logOutUser","connect","Navbar","Nav","NavItem","NavbarBrand","NavLink","Link","Redirect","Keys","Category","SuNavbar","user","dropdownOpen","setDropdownOpen","toggle","prevState","userData","JSON","parse","window","localStorage","getItem","console","log","handleLogoutFailure","err","error","handleLogoutSuccess","alert","imageUrl","Client_id","mapStateToProps","storeState","userState"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./NavBar.css\";\nimport { GoogleLogout } from \"react-google-login\";\nimport { logOutUser } from \"../Redux/actions/userAction\";\nimport { connect } from \"react-redux\";\nimport bookmark from \"./bookmark.svg\";\nimport { Navbar, Nav, NavItem, NavbarBrand } from \"reactstrap\";\nimport { NavLink, Link, Redirect } from \"react-router-dom\";\nimport Keys from \"../config\";\nimport Category from \"./category\";\n\nconst SuNavbar = ({ user, logOutUser }) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  let userData;\n  if (user != null) {\n    userData = JSON.parse(window.localStorage.getItem(\"user\"));\n  } else {\n    userData = null;\n  }\n  console.log(userData);\n\n  const handleLogoutFailure = (err) => {\n    console.error(err);\n  };\n\n  const handleLogoutSuccess = () => {\n    alert(\"Logged out successfully\");\n    logOutUser();\n  };\n\n  return (\n    <div className='navBar' expand='md'>\n      <div className='navBarWidth'>\n        <div>\n          <Link to='/' id='link' className='webName'>\n            <h1 className='webNameH1'>StayUpdated</h1>\n          </Link>\n        </div>\n        <div className='positions' navbar>\n          {!user ? (\n            <Redirect to='/login' />\n          ) : (\n            <>\n              <Category />\n\n              <Link to='/profile/' data-tip='Profile'>\n                <img\n                  src={userData.imageUrl}\n                  className='App-logo-profile App-logo'\n                  alt='logo'\n                />\n              </Link>\n              <div id='navItem3'>\n                <GoogleLogout\n                  clientId={Keys.Client_id}\n                  buttonText='Logout'\n                  onLogoutSuccess={handleLogoutSuccess}\n                  onFailure={handleLogoutFailure}\n                />\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (storeState) => {\n  return {\n    user: storeState.userState.user,\n  };\n};\n\nexport default connect(mapStateToProps, { logOutUser })(SuNavbar);\n"]},"metadata":{},"sourceType":"module"}