{"ast":null,"code":"var _jsxFileName = \"/Users/surya/Desktop/Stay-Updated/Login/src/Pages/SearchPage.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchSearchedNews } from \"../Redux/actions/newsAction\";\nimport SearchedNews from \"../Components/searchedNews\";\nimport Navbar from \"../Components/Navbar\";\nimport { Redirect } from \"react-router-dom\";\nimport Search from \"../Components/Search\";\nimport PuffLoader from \"react-spinners/PuffLoader\";\nimport { css } from \"@emotion/core\";\nimport \"../App.css\";\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nclass SearchPage extends Component {\n  componentDidMount() {\n    const searchQuery = this.props.match.params.searchQuery;\n    console.log(\"I am getting mounted\");\n    this.props.fetchSearchedNews(searchQuery);\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevSearchQuery = prevProps.match.params.searchQuery;\n    const newSearchQuery = this.props.match.params.searchQuery;\n\n    if (prevSearchQuery !== newSearchQuery) {\n      this.props.fetchSearchedNews(newSearchQuery);\n    }\n  }\n\n  render() {\n    // if (!this.props.user) return <Redirect to='/login' />;\n    if (!this.props.news) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"searchPage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Search, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sweet-loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(PuffLoader, {\n        css: override,\n        size: 150,\n        color: \"#123abc\",\n        loading: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"searchPage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Search, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(SearchedNews, {\n        news: this.props.news,\n        mode: \"search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }), \" \");\n    }\n  }\n\n}\n\nconst mapStateToProps = storeState => {\n  console.log(storeState.newsState.news);\n  return {\n    news: storeState.newsState.news\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchSearchedNews\n})(SearchPage);","map":{"version":3,"sources":["/Users/surya/Desktop/Stay-Updated/Login/src/Pages/SearchPage.js"],"names":["React","Component","connect","fetchSearchedNews","SearchedNews","Navbar","Redirect","Search","PuffLoader","css","override","SearchPage","componentDidMount","searchQuery","props","match","params","console","log","componentDidUpdate","prevProps","prevSearchQuery","newSearchQuery","render","news","mapStateToProps","storeState","newsState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAO,YAAP;AAEA,MAAMC,QAAQ,GAAGD,GAAI;;;;CAArB;;AAMA,MAAME,UAAN,SAAyBV,SAAzB,CAAmC;AACjCW,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,WAA5C;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,SAAKJ,KAAL,CAAWX,iBAAX,CAA6BU,WAA7B;AACD;;AAEDM,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAMC,eAAe,GAAGD,SAAS,CAACL,KAAV,CAAgBC,MAAhB,CAAuBH,WAA/C;AACA,UAAMS,cAAc,GAAG,KAAKR,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,WAA/C;;AACA,QAAIQ,eAAe,KAAKC,cAAxB,EAAwC;AACtC,WAAKR,KAAL,CAAWX,iBAAX,CAA6BmB,cAA7B;AACD;AACF;;AACDC,EAAAA,MAAM,GAAG;AACP;AACA,QAAI,CAAC,KAAKT,KAAL,CAAWU,IAAhB,EAAsB;AACpB,0BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AACE,QAAA,GAAG,EAAEd,QADP;AAEE,QAAA,IAAI,EAAE,GAFR;AAGE,QAAA,KAAK,EAAE,SAHT;AAIE,QAAA,OAAO,EAAE,IAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHF,CADF;AAcD,KAfD,MAeO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAE,KAAKI,KAAL,CAAWU,IAA/B;AAAqC,QAAA,IAAI,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAGwD,GAHxD,CADF;AAOD;AACF;;AAxCgC;;AA0CnC,MAAMC,eAAe,GAAIC,UAAD,IAAgB;AACtCT,EAAAA,OAAO,CAACC,GAAR,CAAYQ,UAAU,CAACC,SAAX,CAAqBH,IAAjC;AACA,SAAO;AACLA,IAAAA,IAAI,EAAEE,UAAU,CAACC,SAAX,CAAqBH;AADtB,GAAP;AAGD,CALD;;AAOA,eAAetB,OAAO,CAACuB,eAAD,EAAkB;AAAEtB,EAAAA;AAAF,CAAlB,CAAP,CAAgDQ,UAAhD,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchSearchedNews } from \"../Redux/actions/newsAction\";\nimport SearchedNews from \"../Components/searchedNews\";\nimport Navbar from \"../Components/Navbar\";\nimport { Redirect } from \"react-router-dom\";\nimport Search from \"../Components/Search\";\nimport PuffLoader from \"react-spinners/PuffLoader\";\nimport { css } from \"@emotion/core\";\nimport \"../App.css\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nclass SearchPage extends Component {\n  componentDidMount() {\n    const searchQuery = this.props.match.params.searchQuery;\n    console.log(\"I am getting mounted\");\n    this.props.fetchSearchedNews(searchQuery);\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevSearchQuery = prevProps.match.params.searchQuery;\n    const newSearchQuery = this.props.match.params.searchQuery;\n    if (prevSearchQuery !== newSearchQuery) {\n      this.props.fetchSearchedNews(newSearchQuery);\n    }\n  }\n  render() {\n    // if (!this.props.user) return <Redirect to='/login' />;\n    if (!this.props.news) {\n      return (\n        <div className=\"searchPage\">\n          <Navbar />\n          <Search />\n          <div className=\"sweet-loading\">\n            <PuffLoader\n              css={override}\n              size={150}\n              color={\"#123abc\"}\n              loading={true}\n            />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"searchPage\">\n          <Navbar />\n          <Search />\n          <SearchedNews news={this.props.news} mode=\"search\" />{\" \"}\n        </div>\n      );\n    }\n  }\n}\nconst mapStateToProps = (storeState) => {\n  console.log(storeState.newsState.news);\n  return {\n    news: storeState.newsState.news,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchSearchedNews })(SearchPage);\n"]},"metadata":{},"sourceType":"module"}