{"ast":null,"code":"var _jsxFileName = \"/Users/surya/Desktop/Stay-Updated/Login/src/Components/Navbar.js\";\nimport React, { useState } from \"react\";\nimport \"./NavBar.css\";\nimport { GoogleLogout } from \"react-google-login\";\nimport { logOutUser } from \"../Redux/actions/userAction\";\nimport { connect } from \"react-redux\";\nimport bookmark from \"./bookmark.svg\";\nimport { Navbar, Nav, NavItem, NavbarBrand, Button, ButtonGroup, DropdownToggle, DropdownMenu, DropdownItem, ButtonDropdown } from \"reactstrap\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport Keys from \"../config\"; // import ReactTooltip from \"react-tooltip\";\n\nimport Select from \"react-select\";\nimport { colourOptions, groupedOptions } from \"../data\";\nconst groupStyles = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\"\n};\nconst groupBadgeStyles = {\n  backgroundColor: \"#EBECF0\",\n  borderRadius: \"2em\",\n  color: \"#172B4D\",\n  display: \"inline-block\",\n  fontSize: 12,\n  fontWeight: \"normal\",\n  lineHeight: \"1\",\n  minWidth: 1,\n  padding: \"0.16666666666667em 0.5em\",\n  textAlign: \"center\"\n};\n\nconst formatGroupLabel = data => /*#__PURE__*/React.createElement(\"div\", {\n  style: groupStyles,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }\n}, data.label), /*#__PURE__*/React.createElement(\"span\", {\n  style: groupBadgeStyles,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }\n}, data.options.length));\n\nconst SuNavbar = ({\n  user,\n  logOutUser\n}) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  let userData;\n\n  if (user != null) {\n    userData = JSON.parse(window.localStorage.getItem(\"user\"));\n  } else {\n    userData = null;\n  }\n\n  console.log(userData);\n\n  const handleLogoutFailure = err => {\n    console.error(err);\n  };\n\n  const handleLogoutSuccess = () => {\n    alert(\"Logged out successfully\");\n    logOutUser();\n  };\n\n  return /*#__PURE__*/React.createElement(Navbar, {\n    className: \"bgColor\",\n    expand: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavbarBrand, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    id: \"link\",\n    className: \"webName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"webNameH1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"StayUpdated\"))), /*#__PURE__*/React.createElement(Nav, {\n    className: \"mr-auto\",\n    className: \"positions\",\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, !user ? /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"ml-3\",\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Login\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Entertainment\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Politics\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Sports\"), /*#__PURE__*/React.createElement(ButtonDropdown, {\n    isOpen: dropdownOpen,\n    toggle: toggle,\n    sixe: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    caret: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Dropdown\"), /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, \"Dropdown Link\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, \"Dropdown Link\")))), /*#__PURE__*/React.createElement(NavItem, {\n    id: \"navItem1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/bookmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: bookmark,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(NavItem, {\n    id: \"navItem2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/profile/\",\n    \"data-tip\": \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: userData.imageUrl,\n    className: \"App-logo-profile App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(NavItem, {\n    id: \"navItem3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GoogleLogout, {\n    clientId: Keys.Client_id,\n    buttonText: \"Logout\",\n    onLogoutSuccess: handleLogoutSuccess,\n    onFailure: handleLogoutFailure,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  })))));\n};\n\nconst mapStateToProps = storeState => {\n  return {\n    user: storeState.userState.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logOutUser\n})(SuNavbar);","map":{"version":3,"sources":["/Users/surya/Desktop/Stay-Updated/Login/src/Components/Navbar.js"],"names":["React","useState","GoogleLogout","logOutUser","connect","Navbar","Nav","NavItem","NavbarBrand","Button","ButtonGroup","DropdownToggle","DropdownMenu","DropdownItem","ButtonDropdown","NavLink","Link","Keys","Select","colourOptions","groupedOptions","groupStyles","display","alignItems","justifyContent","groupBadgeStyles","backgroundColor","borderRadius","color","fontSize","fontWeight","lineHeight","minWidth","padding","textAlign","formatGroupLabel","data","label","options","length","SuNavbar","user","dropdownOpen","setDropdownOpen","toggle","prevState","userData","JSON","parse","window","localStorage","getItem","console","log","handleLogoutFailure","err","error","handleLogoutSuccess","alert","bookmark","imageUrl","Client_id","mapStateToProps","storeState","userState"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./NavBar.css\";\nimport { GoogleLogout } from \"react-google-login\";\nimport { logOutUser } from \"../Redux/actions/userAction\";\nimport { connect } from \"react-redux\";\nimport bookmark from \"./bookmark.svg\";\nimport {\n  Navbar,\n  Nav,\n  NavItem,\n  NavbarBrand,\n  Button,\n  ButtonGroup,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  ButtonDropdown,\n} from \"reactstrap\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport Keys from \"../config\";\n// import ReactTooltip from \"react-tooltip\";\nimport Select from \"react-select\";\nimport { colourOptions, groupedOptions } from \"../data\";\n\nconst groupStyles = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n};\nconst groupBadgeStyles = {\n  backgroundColor: \"#EBECF0\",\n  borderRadius: \"2em\",\n  color: \"#172B4D\",\n  display: \"inline-block\",\n  fontSize: 12,\n  fontWeight: \"normal\",\n  lineHeight: \"1\",\n  minWidth: 1,\n  padding: \"0.16666666666667em 0.5em\",\n  textAlign: \"center\",\n};\n\nconst formatGroupLabel = (data) => (\n  <div style={groupStyles}>\n    <span>{data.label}</span>\n    <span style={groupBadgeStyles}>{data.options.length}</span>\n  </div>\n);\n\nconst SuNavbar = ({ user, logOutUser }) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  let userData;\n  if (user != null) {\n    userData = JSON.parse(window.localStorage.getItem(\"user\"));\n  } else {\n    userData = null;\n  }\n  console.log(userData);\n\n  const handleLogoutFailure = (err) => {\n    console.error(err);\n  };\n\n  const handleLogoutSuccess = () => {\n    alert(\"Logged out successfully\");\n    logOutUser();\n  };\n\n  return (\n    <Navbar className='bgColor' expand='md'>\n      <NavbarBrand>\n        <Link to='/' id='link' className='webName'>\n          <h1 className='webNameH1'>StayUpdated</h1>\n        </Link>\n      </NavbarBrand>\n      <Nav className='mr-auto' className='positions' navbar>\n        {!user ? (\n          <NavItem>\n            <NavLink className='ml-3' to='/login'>\n              Login\n            </NavLink>\n          </NavItem>\n        ) : (\n          <>\n            <ButtonGroup>\n              <Button size='sm'>Entertainment</Button>\n              <Button size='sm'>Politics</Button>\n              <Button size='sm'>Sports</Button>\n              <ButtonDropdown isOpen={dropdownOpen} toggle={toggle} sixe='sm'>\n                <DropdownToggle caret>Dropdown</DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem>Dropdown Link</DropdownItem>\n                  <DropdownItem>Dropdown Link</DropdownItem>\n                </DropdownMenu>\n              </ButtonDropdown>\n            </ButtonGroup>\n            <NavItem id='navItem1'>\n              <Link to='/bookmark'>\n                <img src={bookmark} className='App-logo' alt='logo' />\n              </Link>\n            </NavItem>\n            <NavItem id='navItem2'>\n              <NavLink to='/profile/' data-tip='Profile'>\n                <img\n                  src={userData.imageUrl}\n                  className='App-logo-profile App-logo'\n                  alt='logo'\n                />\n              </NavLink>\n            </NavItem>\n            <NavItem id='navItem3'>\n              <GoogleLogout\n                clientId={Keys.Client_id}\n                buttonText='Logout'\n                onLogoutSuccess={handleLogoutSuccess}\n                onFailure={handleLogoutFailure}\n              />\n            </NavItem>\n          </>\n        )}\n      </Nav>\n    </Navbar>\n  );\n};\nconst mapStateToProps = (storeState) => {\n  return {\n    user: storeState.userState.user,\n  };\n};\n\nexport default connect(mapStateToProps, { logOutUser })(SuNavbar);\n"]},"metadata":{},"sourceType":"module"}